--- a/net/minecraft/server/ScoreboardServer.java
+++ b/net/minecraft/server/ScoreboardServer.java
@@ -32,7 +32,7 @@
         return persistentbase_a.levelOrThrow().getScoreboard().createData();
     }, (persistentbase_a) -> {
         ScoreboardServer scoreboardserver = persistentbase_a.levelOrThrow().getScoreboard();
-        Codec codec = PersistentScoreboard.a.CODEC;
+        Codec<PersistentScoreboard.a> codec = PersistentScoreboard.a.CODEC; // CraftBukkit - decompile error
 
         Objects.requireNonNull(scoreboardserver);
         return codec.xmap(scoreboardserver::createData, PersistentScoreboard::pack);
@@ -49,7 +49,7 @@
     protected void onScoreChanged(ScoreHolder scoreholder, ScoreboardObjective scoreboardobjective, ScoreboardScore scoreboardscore) {
         super.onScoreChanged(scoreholder, scoreboardobjective, scoreboardscore);
         if (this.trackedObjectives.contains(scoreboardobjective)) {
-            this.server.getPlayerList().broadcastAll(new PacketPlayOutScoreboardScore(scoreholder.getScoreboardName(), scoreboardobjective.getName(), scoreboardscore.value(), Optional.ofNullable(scoreboardscore.display()), Optional.ofNullable(scoreboardscore.numberFormat())));
+            this.broadcastAll(new PacketPlayOutScoreboardScore(scoreholder.getScoreboardName(), scoreboardobjective.getName(), scoreboardscore.value(), Optional.ofNullable(scoreboardscore.display()), Optional.ofNullable(scoreboardscore.numberFormat()))); // CraftBukkit
         }
 
         this.setDirty();
@@ -64,7 +64,7 @@
     @Override
     public void onPlayerRemoved(ScoreHolder scoreholder) {
         super.onPlayerRemoved(scoreholder);
-        this.server.getPlayerList().broadcastAll(new ClientboundResetScorePacket(scoreholder.getScoreboardName(), (String) null));
+        this.broadcastAll(new ClientboundResetScorePacket(scoreholder.getScoreboardName(), (String) null)); // CraftBukkit
         this.setDirty();
     }
 
@@ -72,7 +72,7 @@
     public void onPlayerScoreRemoved(ScoreHolder scoreholder, ScoreboardObjective scoreboardobjective) {
         super.onPlayerScoreRemoved(scoreholder, scoreboardobjective);
         if (this.trackedObjectives.contains(scoreboardobjective)) {
-            this.server.getPlayerList().broadcastAll(new ClientboundResetScorePacket(scoreholder.getScoreboardName(), scoreboardobjective.getName()));
+            this.broadcastAll(new ClientboundResetScorePacket(scoreholder.getScoreboardName(), scoreboardobjective.getName())); // CraftBukkit
         }
 
         this.setDirty();
@@ -85,7 +85,7 @@
         super.setDisplayObjective(displayslot, scoreboardobjective);
         if (scoreboardobjective1 != scoreboardobjective && scoreboardobjective1 != null) {
             if (this.getObjectiveDisplaySlotCount(scoreboardobjective1) > 0) {
-                this.server.getPlayerList().broadcastAll(new PacketPlayOutScoreboardDisplayObjective(displayslot, scoreboardobjective));
+                this.broadcastAll(new PacketPlayOutScoreboardDisplayObjective(displayslot, scoreboardobjective)); // CraftBukkit
             } else {
                 this.stopTrackingObjective(scoreboardobjective1);
             }
@@ -93,7 +93,7 @@
 
         if (scoreboardobjective != null) {
             if (this.trackedObjectives.contains(scoreboardobjective)) {
-                this.server.getPlayerList().broadcastAll(new PacketPlayOutScoreboardDisplayObjective(displayslot, scoreboardobjective));
+                this.broadcastAll(new PacketPlayOutScoreboardDisplayObjective(displayslot, scoreboardobjective)); // CraftBukkit
             } else {
                 this.startTrackingObjective(scoreboardobjective);
             }
@@ -105,7 +105,7 @@
     @Override
     public boolean addPlayerToTeam(String s, ScoreboardTeam scoreboardteam) {
         if (super.addPlayerToTeam(s, scoreboardteam)) {
-            this.server.getPlayerList().broadcastAll(PacketPlayOutScoreboardTeam.createPlayerPacket(scoreboardteam, s, PacketPlayOutScoreboardTeam.a.ADD));
+            this.broadcastAll(PacketPlayOutScoreboardTeam.createPlayerPacket(scoreboardteam, s, PacketPlayOutScoreboardTeam.a.ADD)); // CraftBukkit
             this.setDirty();
             return true;
         } else {
@@ -116,7 +116,7 @@
     @Override
     public void removePlayerFromTeam(String s, ScoreboardTeam scoreboardteam) {
         super.removePlayerFromTeam(s, scoreboardteam);
-        this.server.getPlayerList().broadcastAll(PacketPlayOutScoreboardTeam.createPlayerPacket(scoreboardteam, s, PacketPlayOutScoreboardTeam.a.REMOVE));
+        this.broadcastAll(PacketPlayOutScoreboardTeam.createPlayerPacket(scoreboardteam, s, PacketPlayOutScoreboardTeam.a.REMOVE)); // CraftBukkit
         this.setDirty();
     }
 
@@ -130,7 +130,7 @@
     public void onObjectiveChanged(ScoreboardObjective scoreboardobjective) {
         super.onObjectiveChanged(scoreboardobjective);
         if (this.trackedObjectives.contains(scoreboardobjective)) {
-            this.server.getPlayerList().broadcastAll(new PacketPlayOutScoreboardObjective(scoreboardobjective, 2));
+            this.broadcastAll(new PacketPlayOutScoreboardObjective(scoreboardobjective, 2)); // CraftBukkit
         }
 
         this.setDirty();
@@ -149,21 +149,21 @@
     @Override
     public void onTeamAdded(ScoreboardTeam scoreboardteam) {
         super.onTeamAdded(scoreboardteam);
-        this.server.getPlayerList().broadcastAll(PacketPlayOutScoreboardTeam.createAddOrModifyPacket(scoreboardteam, true));
+        this.broadcastAll(PacketPlayOutScoreboardTeam.createAddOrModifyPacket(scoreboardteam, true)); // CraftBukkit
         this.setDirty();
     }
 
     @Override
     public void onTeamChanged(ScoreboardTeam scoreboardteam) {
         super.onTeamChanged(scoreboardteam);
-        this.server.getPlayerList().broadcastAll(PacketPlayOutScoreboardTeam.createAddOrModifyPacket(scoreboardteam, false));
+        this.broadcastAll(PacketPlayOutScoreboardTeam.createAddOrModifyPacket(scoreboardteam, false)); // CraftBukkit
         this.setDirty();
     }
 
     @Override
     public void onTeamRemoved(ScoreboardTeam scoreboardteam) {
         super.onTeamRemoved(scoreboardteam);
-        this.server.getPlayerList().broadcastAll(PacketPlayOutScoreboardTeam.createRemovePacket(scoreboardteam));
+        this.broadcastAll(PacketPlayOutScoreboardTeam.createRemovePacket(scoreboardteam)); // CraftBukkit
         this.setDirty();
     }
 
@@ -200,6 +200,7 @@
         List<Packet<?>> list = this.getStartTrackingPackets(scoreboardobjective);
 
         for (EntityPlayer entityplayer : this.server.getPlayerList().getPlayers()) {
+            if (entityplayer.getBukkitEntity().getScoreboard().getHandle() != this) continue; // CraftBukkit - Only players on this board
             for (Packet<?> packet : list) {
                 entityplayer.connection.send(packet);
             }
@@ -226,6 +227,7 @@
         List<Packet<?>> list = this.getStopTrackingPackets(scoreboardobjective);
 
         for (EntityPlayer entityplayer : this.server.getPlayerList().getPlayers()) {
+            if (entityplayer.getBukkitEntity().getScoreboard().getHandle() != this) continue; // CraftBukkit - Only players on this board
             for (Packet<?> packet : list) {
                 entityplayer.connection.send(packet);
             }
@@ -261,6 +263,16 @@
         return persistentscoreboard;
     }
 
+    // CraftBukkit start - Send to players
+    private void broadcastAll(Packet packet) {
+        for (EntityPlayer entityplayer : (List<EntityPlayer>) this.server.getPlayerList().players) {
+            if (entityplayer.getBukkitEntity().getScoreboard().getHandle() == this) {
+                entityplayer.connection.send(packet);
+            }
+        }
+    }
+    // CraftBukkit end
+
     public static enum Action {
 
         CHANGE, REMOVE;
